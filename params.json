{"name":"Dnscrypt-wrapper","tagline":"This is dnscrypt wrapper (server-side dnscrypt proxy), which helps to add dnscrypt support to any name resolver.","body":"Name\r\n====\r\n\r\ndnscrypt-wrapper - A server-side dnscrypt proxy.\r\n\r\n(c) 2012-2013 Yecheng Fu <cofyc.jackson at gmail dot com>\r\n\r\n[![Build Status](https://travis-ci.org/Cofyc/dnscrypt-wrapper.png?branch=master)](https://travis-ci.org/Cofyc/dnscrypt-wrapper)\r\n\r\nDescription\r\n===========\r\n\r\nThis is dnscrypt wrapper (server-side dnscrypt proxy), which helps to\r\nadd dnscrypt support to any name resolver.\r\n\r\nThis software is modified from\r\n[dnscrypt-proxy](https://github.com/jedisct1/dnscrypt-proxy).\r\n\r\nInstallation\r\n============\r\n\r\nInstall [libsodium](https://github.com/jedisct1/libsodium) and libevent2 first.\r\n\r\nOn Linux:\r\n\r\n    $ ldconfig # if you install libsodium from source\r\n    $ git clone --recursive git://github.com/Cofyc/dnscrypt-wrapper.git\r\n    $ make configure\r\n    $ ./configure\r\n    $ make install\r\n\r\nOn FreeBSD:\r\n\r\n    $ pkg_add -r gmake autoconf\r\n    $ pkg_add -r libevent2\r\n    $ gmake LDFLAGS='-L/usr/local/lib/event2 -L/usr/local/lib' CFLAGS=-I/usr/local/include\r\n\r\nOn OpenBSD:\r\n\r\n    $ pkg_add -r gmake autoconf\r\n    $ pkg_add -r libevent\r\n    $ gmake LDFLAGS='-L/usr/local/lib/' CFLAGS=-I/usr/local/include/\r\n\r\nUsage\r\n=====\r\n\r\nFirst, generate provider keypair:\r\n\r\n    # stored in public.key/secret.key in current directory\r\n    $ ./dnscrypt-wrapper --gen-provider-keypair\r\n\r\nSecond, generate crypt keypair:\r\n\r\n    # stored in crypt_public.key/crypt_secret.key in current directory\r\n    $ ./dnscrypt-wrapper --gen-crypt-keypair\r\n\r\nThird, generate pre-signed certificate (use pre-generated key pairs):\r\n\r\n    # stored in dnscrypt.cert in current directory\r\n    $ ./dnscrypt-wrapper --crypt-secretkey-file crypt_secret.key --crypt-publickey-file=crypt_public.key --provider-publickey-file=public.key --provider-secretkey-file=secret.key --gen-cert-file\r\n\r\nRun the program with pre-signed certificate:\r\n\r\n    $ ./dnscrypt-wrapper  -r 8.8.8.8:53 -a 0.0.0.0:54  --crypt-secretkey-file=crypt_secret.key --crypt-publickey-file=crypt_public.key --provider-cert-file=dnscrypt.cert --provider-name=2.dnscrypt-cert.yechengfu.com -VV\r\n\r\nIf you can store genearted pre-signed certificate (binary string) in TXT record for your provider name, for example: 2.dnscrypt-cert.yourdomain.com. Then you can omit `--provider-cert-file` option. Name server will serve this binary certificate data for you.\r\n\r\nP.S. We still provide `--provider-cert-file` option, because it's not convenient to store such long binary data in dns TXT record sometimes. But it's easy to configure it in your own dns servers (such as tinydns, etc). `--gen-cert-file` will generate example record in stdout.\r\n\r\nRun dnscrypt-proxy to test againt it:\r\n\r\n    # --provider-key is public key fingerprint in first step.\r\n    $ ./dnscrypt-proxy -a 127.0.0.1:55 --provider-name=2.dnscrypt-cert.yechengfu.com -r 127.0.0.1:54 --provider-key=<provider_public_key_fingerprint>\r\n    $ dig -p 55 google.com @127.0.0.1\r\n\r\n`<provider_public_key_fingerprint>` is public key fingerprint generated by `./dnscrypt-wrapper --gen-provider-keypair`, e.g. 4298:5F65:C295:DFAE:2BFB:20AD:5C47:F565:78EB:2404:EF83:198C:85DB:68F1:3E33:E952.\r\n\r\nOptional, add `-d/--daemonize` flag to run as daemon.\r\n\r\nRun `./dnscrypt-wrapper -h` to view command line options.\r\n\r\nSee also\r\n========\r\n    \r\n- http://dnscrypt.org/\r\n- http://www.opendns.com/technology/dnscrypt/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}